---
title: "Predicting New Construction in Philadelphia"
subtitle: "MUSA 508 Final Project"
authors: "Laura Frances and Nissim Lebovits"
date: today
project:
  type: website
  output-dir: docs
format: 
  html:
    embed-resources: true
    toc: true
    toc_float: true
    theme: cosmo
    code-fold: true
    code-summary: "Show the code"
    number-sections: true
editor: source
editor_options:
  markdown:
    wrap: sentence
execute:
  warning: false
  error: false
  messages: false
  echo: true
  cache: false
---

## Summary

## Introduction

```{r setup}

source("config.R")

required_packages <- c("tidyverse", "sf", "acs", "tidycensus", "sfdep", "kableExtra", "conflicted",
                       "gganimate", "tmap", "gifski", "transformr")
install_and_load_packages(required_packages)

source("utils/viz_utils.R")

select <- dplyr::select
filter <- dplyr::filter

options(scipen = 999, tigris_use_cache = TRUE, tigris_class = 'sf')

crs <- 'epsg:2272'
```

```{r make grid}
### PHL bounds and grid----------------------------------------
phl_path <- "https://opendata.arcgis.com/datasets/405ec3da942d4e20869d4e1449a2be48_0.geojson"
phl <- st_read(phl_path, quiet = TRUE) %>%
          st_transform(crs = crs)

phl_bgs_path <- "https://opendata.arcgis.com/datasets/2f982bada233478ea0100528227febce_0.geojson"
phl_bgs <- st_read(phl_bgs_path, quiet = TRUE) %>%
          st_transform(crs = crs) %>%
          select(GEOID10)

# cellsize <- 1000
# 
# phl_grid <- st_make_grid(phl, crs = crs, cellsize = cellsize, square = FALSE) %>% 
#                 st_as_sf()
# 
# phl_grid <- phl_grid[phl, ]
# phl_grid <- phl_grid %>%
#                 mutate(grid_id = 1:n())
```

```{r g}
ggplot(phl_bgs) +
  geom_sf()
```

```{r import}
building_permits <- readRDS(building_permits_path)
building_permits <- building_permits %>%
                      mutate(permitissuedate = as.Date(permitissuedate),
                             year = year(permitissuedate)) %>%
                      filter(year != 2012)

# permits_net <- st_join(phl_grid, building_permits) %>%
#                   group_by(grid_id, year) %>%
#                   summarize(permits_count = sum(permits_count),
#                             permits_count = ifelse(is.na(permits_count), 0, permits_count))

permits_bg <- st_join(phl_bgs, building_permits) %>%
                  group_by(GEOID10, year) %>%
                  summarize(permits_count = sum(permits_count),
                            permits_count = ifelse(is.na(permits_count), 0, permits_count))
```



```{r eda}
ggplot(permits_bg, aes(x = as.factor(year))) +
  geom_bar()

ggplot(permits_bg %>% st_drop_geometry, aes(x = permits_count)) +
  geom_histogram() +
  facet_wrap(~year)

ggplot(permits_bg %>% filter(year != 2012)) +
  geom_sf(aes(fill = permits_count), color = NA) +
  scale_fill_viridis_c() +
  labs(title = "Building Permits per Block Group") +
  facet_wrap(~year) +
  theme_void()

tm <- tm_shape(permits_bg %>% filter(year != 2012)) +
        tm_polygons(col = "permits_count", border.alpha = 0, palette = 'viridis', style = "fisher") +
  tm_layout(frame = FALSE) +
  tm_facets(along = "year")

tmap_animation(tm)
```


```{r wrangle}

# ### spacial process vars--------------------------
# lag_net <- full_net %>%
#   transmute(
#          x = x,
#          grid_id = grid_id,
#          mapname = mapname,
#          count_complaints = count_complaints,
#          nb = st_contiguity(x),
#          wt = st_weights(nb),
#          lag_dumping = st_lag(count_complaints, nb, wt),
#          lag_vacant = st_lag(count_vacant, nb, wt),
#          lag_cars = st_lag(cars_count, nb, wt),
#          lag_outages = st_lag(outage_count, nb, wt),
#          lag_permits = st_lag(permits_count, nb, wt))
```

## Methods

## Results

## Discussion

## Conclusion

## Appendices